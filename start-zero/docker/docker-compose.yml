services:
  start_zero_postgres:
    image: postgres:16.2-alpine
    shm_size: 1g
    user: postgres
    restart: always
    healthcheck:
      test: 'pg_isready -U user --dbname=postgres'
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5411:5432
    environment:
      POSTGRES_USER: user
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: password
    command: |
      postgres 
      -c wal_level=logical
      -c max_wal_senders=10 
      -c max_replication_slots=5 
      -c hot_standby=on 
      -c hot_standby_feedback=on
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./:/docker-entrypoint-initdb.d
    networks:
      - app_network

  # Auth database (Better Auth)
  auth_db:
    image: postgres:16.2-alpine
    ports:
      - '5431:5432'
    environment:
      POSTGRES_USER: 'auth_user'
      POSTGRES_PASSWORD: 'auth_password'
      POSTGRES_DB: 'better_auth'
    volumes:
      - auth_pgdata:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U auth_user']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  pgdata:
    driver: local
  auth_pgdata:
    driver: local
